import "../imports.aspel";

initOverlord :: func void(overlord: Entity^, posX: float32, posY: float32)
{
    random: asl.Random;
    asl.seedRandomTime(&random);
    
    seed: int16 = cast(int16) (asl.randomInt32(&random) & 0xFFFF);
    tick: int16 = 0;

    overlord.x = posX;
    overlord.y = posY;
    overlord.vw = 2.0;
    overlord.vh = 2.0;
    overlord.pw = 1.8;
    overlord.ph = 1.8;
    overlord.pox = 0.1;
    overlord.poy = 0.1;
    overlord.animation = art.entity.overlord;
    overlord.animation.tick = cast(int32)(cast(uint32) asl.randomInt32(&random) %
                                     cast(uint32)(overlord.animation.frameTime *
                                                  overlord.animation.frames.n));
    overlord.animation.slowTick = cast(int32)(cast(uint32) asl.randomInt32(&random) %
                                         cast(uint32)(overlord.animation.slowFrameFreq +
                                                      overlord.animation.slowFrameTime *
                                                      overlord.animation.slowFrames.n));

    overlord.health = 100;
    overlord.maxHealth = 100;
    overlord.mana = 0;
    overlord.maxMana = 0;

    overlord.userdata = (cast(int32)(seed) << 16) | (cast(int32) tick);
    overlord.tick = tickOverlord;
    overlord.render = renderEntity;
    overlord.onDeath = onDeathOverlord;
}

tickOverlord :: func void(world: World^, overlord: Entity^)
{
    // TODO: Diagonal is faster.

    seed: int16 = cast(int16)(overlord.userdata >> 16);
    tick: int16 = cast(int16)(overlord.userdata & 0xFFFF);
    if tick >= 80
    {
        tick = 0;
        seed = seed + 1;
    }
    tick = tick + 1;
    overlord.userdata = (cast(int32)(seed) << 16) | (cast(int32) tick);
    
    random: asl.Random;
    asl.seedRandom(&random, seed);

    movementSpeed :: 0.01;
    mx: float32 = cast(float32) (cast(uint32) asl.randomInt32(&random) % cast(uint32) 3) - 1.0;
    my: float32 = cast(float32) (cast(uint32) asl.randomInt32(&random) % cast(uint32) 3) - 1.0;
    moveX: float32 = mx * movementSpeed;
    moveY: float32 = my * movementSpeed;

    entityCollideWithTerrain(&world.terrain, overlord, &moveX, &moveY);
    // TODO: collide with other entitites

    overlord.x = overlord.x + moveX;
    overlord.y = overlord.y + moveY;
}

onDeathOverlord :: func void(overlord: Entity^)
{
    random: asl.Random;
    asl.seedRandomTime(&random);

    i := 0;
    while i < 5
    {
        ox := asl.randomFloat32(&random) * overlord.vw;
        oy := asl.randomFloat32(&random) * overlord.vh;

        randomIndex := cast(uint32) asl.randomInt32(&random);
        spriteIndex := randomIndex % art.particle.overlordTentacleRemains.n;
        sprite := art.particle.overlordTentacleRemains[spriteIndex];

        addParticle(overlord.x + ox, overlord.y + oy,
                    asl.randomInt32(&random) % 180,
                    0.1, 0.95,
                    asl.randomInt32(&random) % 180, 10.0, 0.99,
                    0.25, sprite, 40, 120);
        i = i + 1;
    }

    i = 0;
    while i < 10
    {
        ox := asl.randomFloat32(&random) * overlord.vw;
        oy := asl.randomFloat32(&random) * overlord.vh;

        randomIndex := cast(uint32) asl.randomInt32(&random);
        spriteIndex := randomIndex % art.particle.overlordSmallRemains.n;
        sprite := art.particle.overlordSmallRemains[spriteIndex];

        addParticle(overlord.x + ox, overlord.y + oy,
                    asl.randomInt32(&random) % 180,
                    0.1, 0.1,
                    asl.randomInt32(&random) % 180, 10.0, 0.9,
                    0.25, sprite, 40, 300);
        i = i + 1;
    }

    i = 0;
    while i < 30
    {
        ox := asl.randomFloat32(&random) * overlord.vw;
        oy := asl.randomFloat32(&random) * overlord.vh;

        randomIndex := cast(uint32) asl.randomInt32(&random);
        spriteIndex := randomIndex % art.particle.smallBloodStain.n;
        sprite := art.particle.smallBloodStain[spriteIndex];

        addParticle(overlord.x + ox, overlord.y + oy,
                    asl.randomInt32(&random) % 180,
                    0.1, 0.1,
                    asl.randomInt32(&random) % 180, 10.0, 0.9,
                    0.1, sprite, 40, 300);
        i = i + 1;
    }
}