
Ability :: type struct
{
    checkRequirements: delegate bool(e: Entity^);
    activate: delegate void(world: World^, e: Entity^, tx: float32, ty: float32);

    icon: Animation;
};

spendMana :: func void(e: Entity^, mana: float32)
{
    e.mana = e.mana - mana;
    if e.mana < 0.0 then
        e.mana = 0.0;
}

manaRequirement :: func bool(e: Entity^, mana: float32)
{
    return e.mana >= mana;
}

initAbilities :: func void()
{
    initAbilityFireball();
    initAbilityEyeball();
}
